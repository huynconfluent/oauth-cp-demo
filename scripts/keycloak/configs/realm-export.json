{
    "id": "3a2b6d0e-fd6f-4701-8420-6a3346ee2dc3",
    "realm": "confluentdemo",
    "displayName": "Confluent Demo IdP",
    "displayNameHtml": "",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "none",
    "registrationAllowed": false,
    "registrationEmailAsUsername": true,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles":
    {
        "realm":
        [
            {
                "id": "12229343-fe64-4055-a128-67c19b7b5078",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "3a2b6d0e-fd6f-4701-8420-6a3346ee2dc3",
                "attributes":
                {}
            },
            {
                "id": "f343a662-4172-479a-bb7d-b3f08867f58d",
                "name": "default-roles-confluentdemo",
                "description": "${role_default-roles}",
                "composite": true,
                "composites":
                {
                    "realm":
                    [
                        "offline_access",
                        "uma_authorization"
                    ],
                    "client":
                    {
                        "account":
                        [
                            "view-profile",
                            "manage-account"
                        ]
                    }
                },
                "clientRole": false,
                "containerId": "3a2b6d0e-fd6f-4701-8420-6a3346ee2dc3",
                "attributes":
                {}
            },
            {
                "id": "e11162c4-e63e-42fe-9b50-ec31bf9d2046",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "3a2b6d0e-fd6f-4701-8420-6a3346ee2dc3",
                "attributes":
                {}
            }
        ],
        "client":
        {
            "connectorsourceclient":
            [],
            "kafka":
            [],
            "kraftcontroller":
            [],
            "confluentmetadataservice":
            [],
            "realm-management":
            [
                {
                    "id": "769c6b53-955c-4a2c-8938-e019666bb489",
                    "name": "query-clients",
                    "description": "${role_query-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "2081a42a-ab3b-4366-9027-d1eef20fcc97",
                    "name": "view-users",
                    "description": "${role_view-users}",
                    "composite": true,
                    "composites":
                    {
                        "client":
                        {
                            "realm-management":
                            [
                                "query-users",
                                "query-groups"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "9adff36c-7512-4ba6-80b7-bcccc3992a65",
                    "name": "realm-admin",
                    "description": "${role_realm-admin}",
                    "composite": true,
                    "composites":
                    {
                        "client":
                        {
                            "realm-management":
                            [
                                "view-users",
                                "query-clients",
                                "view-events",
                                "create-client",
                                "manage-clients",
                                "manage-users",
                                "query-realms",
                                "manage-authorization",
                                "query-users",
                                "manage-events",
                                "impersonation",
                                "view-identity-providers",
                                "manage-identity-providers",
                                "view-clients",
                                "query-groups",
                                "view-realm",
                                "view-authorization",
                                "manage-realm"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "b19b21fb-2343-4cf8-8c18-a0fdf3b4dd12",
                    "name": "view-events",
                    "description": "${role_view-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "16e015ea-57a0-4180-8e0a-b1034edd442b",
                    "name": "create-client",
                    "description": "${role_create-client}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "89c12b7c-5a3d-4bf8-9be7-ba316dbc09cc",
                    "name": "manage-clients",
                    "description": "${role_manage-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "fc92477a-e933-42db-92c5-dc78255eab3d",
                    "name": "manage-users",
                    "description": "${role_manage-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "3e6cffad-b1d3-4a53-8067-3cf9b3104a7a",
                    "name": "query-realms",
                    "description": "${role_query-realms}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "9c81f354-7551-4748-ad99-6f54618bf12a",
                    "name": "manage-authorization",
                    "description": "${role_manage-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "8dd525ee-8b6f-49db-9910-1bb72464e1ff",
                    "name": "query-users",
                    "description": "${role_query-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "b8141fbc-a107-497a-acd8-6c3ff02607fd",
                    "name": "manage-events",
                    "description": "${role_manage-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "9822c38d-f92d-4fc6-9053-3eab2c4f9e88",
                    "name": "impersonation",
                    "description": "${role_impersonation}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "f0a671b9-3fa8-4b98-ae19-c74b857b8e7d",
                    "name": "view-identity-providers",
                    "description": "${role_view-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "8afe6c93-7d06-4b94-b79b-352842065dcb",
                    "name": "manage-identity-providers",
                    "description": "${role_manage-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "6c64c665-05c6-41e6-bea2-2f7b20f4d9c6",
                    "name": "view-clients",
                    "description": "${role_view-clients}",
                    "composite": true,
                    "composites":
                    {
                        "client":
                        {
                            "realm-management":
                            [
                                "query-clients"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "7e2baebd-037b-45ef-a2f1-2fd70d0aed0b",
                    "name": "query-groups",
                    "description": "${role_query-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "a527dc36-bde9-4e30-9636-a9138dc0b00a",
                    "name": "view-realm",
                    "description": "${role_view-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "184b9012-c572-4fe1-884c-3f83250882b3",
                    "name": "view-authorization",
                    "description": "${role_view-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                },
                {
                    "id": "860bba41-13c4-4f1c-b1ac-3fbffcd91111",
                    "name": "manage-realm",
                    "description": "${role_manage-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
                    "attributes":
                    {}
                }
            ],
            "kafkametricsreporter":
            [],
            "ksqlclient":
            [],
            "security-admin-console":
            [],
            "kafkacliclient":
            [],
            "connectclient":
            [],
            "connectorsinkclient":
            [],
            "account-console":
            [],
            "broker":
            [
                {
                    "id": "9c882d8a-fa83-4ddf-995f-a347cb6177a3",
                    "name": "read-token",
                    "description": "${role_read-token}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "10f4660c-8450-48fe-9f7e-90f8a65295bc",
                    "attributes":
                    {}
                }
            ],
            "schemaregistryclient":
            [],
            "kafkarestproxy":
            [],
            "controlcenterclient":
            [],
            "admin-cli":
            [],
            "kafkarestclient":
            [],
            "account":
            [
                {
                    "id": "62ae78f2-ce1c-4d62-a7f2-407cd857e3f0",
                    "name": "delete-account",
                    "description": "${role_delete-account}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "cb92f96e-ee09-4411-aace-b59556687561",
                    "attributes":
                    {}
                },
                {
                    "id": "bd9ea442-f9c0-4187-bbcc-fb4b831918c5",
                    "name": "manage-consent",
                    "description": "${role_manage-consent}",
                    "composite": true,
                    "composites":
                    {
                        "client":
                        {
                            "account":
                            [
                                "view-consent"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "cb92f96e-ee09-4411-aace-b59556687561",
                    "attributes":
                    {}
                },
                {
                    "id": "469196ce-cfbc-4f7e-ba74-491ba65eb841",
                    "name": "view-profile",
                    "description": "${role_view-profile}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "cb92f96e-ee09-4411-aace-b59556687561",
                    "attributes":
                    {}
                },
                {
                    "id": "fe3e82d8-c562-441e-b6d2-b5265a0f53e0",
                    "name": "view-groups",
                    "description": "${role_view-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "cb92f96e-ee09-4411-aace-b59556687561",
                    "attributes":
                    {}
                },
                {
                    "id": "6f3942bc-ea67-4d9c-bc4e-529237a8018b",
                    "name": "view-applications",
                    "description": "${role_view-applications}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "cb92f96e-ee09-4411-aace-b59556687561",
                    "attributes":
                    {}
                },
                {
                    "id": "62793083-9d8f-4095-915b-ef0cb05f313c",
                    "name": "manage-account-links",
                    "description": "${role_manage-account-links}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "cb92f96e-ee09-4411-aace-b59556687561",
                    "attributes":
                    {}
                },
                {
                    "id": "9b70a30f-f10e-410a-be48-b099a26c61b0",
                    "name": "view-consent",
                    "description": "${role_view-consent}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "cb92f96e-ee09-4411-aace-b59556687561",
                    "attributes":
                    {}
                },
                {
                    "id": "75713aa0-6a18-4af5-a72b-6978e35c3635",
                    "name": "manage-account",
                    "description": "${role_manage-account}",
                    "composite": true,
                    "composites":
                    {
                        "client":
                        {
                            "account":
                            [
                                "manage-account-links"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "cb92f96e-ee09-4411-aace-b59556687561",
                    "attributes":
                    {}
                }
            ],
            "replicatorclient":
            []
        }
    },
    "groups":
    [
        {
            "id": "3377caa4-a82a-43a8-af8e-7254176470b6",
            "name": "administrators",
            "path": "/administrators",
            "subGroups":
            [],
            "attributes":
            {},
            "realmRoles":
            [],
            "clientRoles":
            {}
        },
        {
            "id": "4c327787-667b-44bd-ba2d-c3eeb71b96d8",
            "name": "auditors",
            "path": "/auditors",
            "subGroups":
            [],
            "attributes":
            {},
            "realmRoles":
            [],
            "clientRoles":
            {}
        },
        {
            "id": "4248b5f9-2363-4579-adbd-06c2f3dec289",
            "name": "cp_components",
            "path": "/cp_components",
            "subGroups":
            [
                {
                    "id": "bfc927ee-3c9d-4992-b09e-9e52d1125d81",
                    "name": "broker_apps",
                    "path": "/cp_components/broker_apps",
                    "parentId": "4248b5f9-2363-4579-adbd-06c2f3dec289",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                },
                {
                    "id": "7243ea18-c07e-4d38-82ee-a36a09248e05",
                    "name": "connect_apps",
                    "path": "/cp_components/connect_apps",
                    "parentId": "4248b5f9-2363-4579-adbd-06c2f3dec289",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                },
                {
                    "id": "9dee5107-dbeb-4f65-8452-7dd1efea77cf",
                    "name": "controlcenter_apps",
                    "path": "/cp_components/controlcenter_apps",
                    "parentId": "4248b5f9-2363-4579-adbd-06c2f3dec289",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                },
                {
                    "id": "7cd71c84-5aaf-4892-abfa-aeab733a636a",
                    "name": "controller_apps",
                    "path": "/cp_components/controller_apps",
                    "parentId": "4248b5f9-2363-4579-adbd-06c2f3dec289",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                },
                {
                    "id": "867b978e-49b1-47fe-8a13-0ee44f087999",
                    "name": "ksql_apps",
                    "path": "/cp_components/ksql_apps",
                    "parentId": "4248b5f9-2363-4579-adbd-06c2f3dec289",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                },
                {
                    "id": "c0e351ec-9977-45b1-aa69-92fb74709793",
                    "name": "restproxy_apps",
                    "path": "/cp_components/restproxy_apps",
                    "parentId": "4248b5f9-2363-4579-adbd-06c2f3dec289",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                },
                {
                    "id": "73c0c251-61da-4610-bfad-46d490195d6f",
                    "name": "schemaregistry_apps",
                    "path": "/cp_components/schemaregistry_apps",
                    "parentId": "4248b5f9-2363-4579-adbd-06c2f3dec289",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                }
            ],
            "attributes":
            {},
            "realmRoles":
            [],
            "clientRoles":
            {}
        },
        {
            "id": "26e1692a-8b4a-4a03-843b-7a861ba1ffaf",
            "name": "developers",
            "path": "/developers",
            "subGroups":
            [
                {
                    "id": "6473ecba-77d6-46eb-8de2-d18ab0637a31",
                    "name": "billing",
                    "path": "/developers/billing",
                    "parentId": "26e1692a-8b4a-4a03-843b-7a861ba1ffaf",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                },
                {
                    "id": "d44b127f-9803-480d-b478-b0a45cc39227",
                    "name": "iot",
                    "path": "/developers/iot",
                    "parentId": "26e1692a-8b4a-4a03-843b-7a861ba1ffaf",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                },
                {
                    "id": "75d07650-d316-474b-8cb5-ac3ff48b7fdf",
                    "name": "notifications",
                    "path": "/developers/notifications",
                    "parentId": "26e1692a-8b4a-4a03-843b-7a861ba1ffaf",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                },
                {
                    "id": "17ebf4c2-6c36-4e97-88c8-172400bd1c72",
                    "name": "purchasing",
                    "path": "/developers/purchasing",
                    "parentId": "26e1692a-8b4a-4a03-843b-7a861ba1ffaf",
                    "subGroups":
                    [],
                    "attributes":
                    {},
                    "realmRoles":
                    [],
                    "clientRoles":
                    {}
                }
            ],
            "attributes":
            {},
            "realmRoles":
            [],
            "clientRoles":
            {}
        },
        {
            "id": "aab46228-e6a4-49cf-8ef0-cdd6deaade4d",
            "name": "operators",
            "path": "/operators",
            "subGroups":
            [],
            "attributes":
            {},
            "realmRoles":
            [],
            "clientRoles":
            {}
        },
        {
            "id": "8aee21b2-9c03-429a-9dc9-70a021a6bc49",
            "name": "employees",
            "path": "/employees",
            "subGroups":
            [],
            "attributes":
            {},
            "realmRoles":
            [],
            "clientRoles":
            {}
        }
    ],
    "defaultRole":
    {
        "id": "f343a662-4172-479a-bb7d-b3f08867f58d",
        "name": "default-roles-confluentdemo",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "3a2b6d0e-fd6f-4701-8420-6a3346ee2dc3"
    },
    "requiredCredentials":
    [
        "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications":
    [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts":
    {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms":
    [
        "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids":
    [],
    "webAuthnPolicyExtraOrigins":
    [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms":
    [
        "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids":
    [],
    "webAuthnPolicyPasswordlessExtraOrigins":
    [],
    "users":
    [
        {
            "id": "96555a11-010d-48e8-80dc-5115a9745429",
            "username": "superuser@confluentdemo.io",
            "firstName": "Super",
            "lastName": "User",
            "email": "superuser@confluentdemo.io",
            "emailVerified": false,
            "createdTimestamp": 1727708232293,
            "enabled": true,
            "totp": false,
            "credentials":
            [
                {
                    "id": "7d88437d-5010-49a4-a165-18a99481cf70",
                    "type": "password",
                    "userLabel": "My password",
                    "createdDate": 1727708246821,
                    "secretData": "{\"value\":\"+wgeE0cnMB5Ep9fxVAFtYhfL8g827dppnow7vjT9YIc=\",\"salt\":\"QV92TRTtHeKAmBb+a26ETQ==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
                }
            ],
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/administrators"
            ]
        },
        {
            "id": "a5969cda-64fb-4849-a76a-1c2ee121d2ca",
            "username": "baduser@confluentdemo.io",
            "firstName": "Bad",
            "lastName": "User",
            "email": "baduser@confluentdemo.io",
            "emailVerified": false,
            "createdTimestamp": 1727708525228,
            "enabled": true,
            "totp": false,
            "credentials":
            [
                {
                    "id": "609d66b0-9907-459f-98c1-c91ff1c29380",
                    "type": "password",
                    "userLabel": "My password",
                    "createdDate": 1727708535033,
                    "secretData": "{\"value\":\"qD1rs+c/0ZKQbuA7v0oR9hK2lDY7EX/ewEIIKGmW+rs=\",\"salt\":\"lphOOzuPSiruT3XWzxVhEw==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
                }
            ],
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            []
        },
        {
            "id": "69e208d7-57d2-435a-a74a-c9f06cee1ff7",
            "username": "barnie@confluentdemo.io",
            "firstName": "Barnie",
            "lastName": "Rubble",
            "email": "barnie@confluentdemo.io",
            "emailVerified": false,
            "createdTimestamp": 1727708555900,
            "enabled": true,
            "totp": false,
            "credentials":
            [
                {
                    "id": "b2611093-9953-4dab-983c-69c33b6d881a",
                    "type": "password",
                    "userLabel": "My password",
                    "createdDate": 1727708566709,
                    "secretData": "{\"value\":\"gEgJ729PhxQNxeATg5+NtXZex3EThptMYygSI7uCqYg=\",\"salt\":\"93SGym1daASQ48EjVwTOXg==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
                }
            ],
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/employees",
                "/operators"
            ]
        },
        {
            "id": "8af4ccbe-6cb5-483c-90c9-be1db8dcde7a",
            "username": "charlie@confluentdemo.io",
            "firstName": "Charlie",
            "lastName": "Sheen",
            "email": "charlie@confluentdemo.io",
            "emailVerified": false,
            "createdTimestamp": 1727708596504,
            "enabled": true,
            "totp": false,
            "credentials":
            [
                {
                    "id": "17b8620d-78c2-4274-a2ba-fe31c376c447",
                    "type": "password",
                    "userLabel": "My password",
                    "createdDate": 1727708605625,
                    "secretData": "{\"value\":\"HFbEptvqRwuSJwV+nqHuB1qH1cd4cuF5dAoM99yY0pg=\",\"salt\":\"eqmK0OARx8/fjccWl+5jMQ==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
                }
            ],
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/developers/billing",
                "/developers",
                "/employees"
            ]
        },
        {
            "id": "c1ca2532-8cfe-47f9-b89e-3a2c9e7a76e0",
            "username": "donna@confluentdemo.io",
            "firstName": "Donna",
            "lastName": "Troy",
            "email": "donna@confluentdemo.io",
            "emailVerified": false,
            "createdTimestamp": 1727708639834,
            "enabled": true,
            "totp": false,
            "credentials":
            [
                {
                    "id": "7c5abb14-2bb8-452b-bcbd-7ffb62def20a",
                    "type": "password",
                    "userLabel": "My password",
                    "createdDate": 1727708651234,
                    "secretData": "{\"value\":\"kXvakLG6AMRubG29AbCJdJCSrDeQN1bhblhMwtZMzOk=\",\"salt\":\"c7fWzAe3aMXKGQZ4LkohgQ==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
                }
            ],
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/developers",
                "/employees",
                "/developers/iot"
            ]
        },
        {
            "id": "57dfd9bd-a451-43a9-b7a8-fe9995b0e2cf",
            "username": "ororo@confluentdemo.io",
            "firstName": "Ororo",
            "lastName": "Munroe",
            "email": "ororo@confluentdemo.io",
            "emailVerified": false,
            "createdTimestamp": 1727708685608,
            "enabled": true,
            "totp": false,
            "credentials":
            [
                {
                    "id": "755529f2-5662-4e37-be92-104a3cca22a5",
                    "type": "password",
                    "userLabel": "My password",
                    "createdDate": 1727708697875,
                    "secretData": "{\"value\":\"B2aeTvgqYLq1YqNKRMJa26CBcONEqjnccRjSTI2RSvo=\",\"salt\":\"bzShWc2gkHTaSB4NIcrQhA==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
                }
            ],
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/developers",
                "/employees",
                "/developers/notifications"
            ]
        },
        {
            "id": "9db8b704-2f15-4187-a43d-d101be605836",
            "username": "sam@confluentdemo.io",
            "firstName": "Sam",
            "lastName": "Bridges",
            "email": "sam@confluentdemo.io",
            "emailVerified": false,
            "createdTimestamp": 1727708719531,
            "enabled": true,
            "totp": false,
            "credentials":
            [
                {
                    "id": "0076b6de-2350-4aa5-ab4b-b490a57e1733",
                    "type": "password",
                    "userLabel": "My password",
                    "createdDate": 1727708729261,
                    "secretData": "{\"value\":\"Kw3ld3M7oRgln0U6fpjAS7vg9amDzEvW4+1iTNADnxA=\",\"salt\":\"ZTQls3G/DcOj1d6DQLPy+Q==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
                }
            ],
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/developers",
                "/employees",
                "/developers/purchasing"
            ]
        },
        {
            "id": "d5db95e2-a025-48e5-95a3-4e7893130926",
            "username": "alice@confluentdemo.io",
            "firstName": "Alice",
            "lastName": "LookingGlass",
            "email": "alice@confluentdemo.io",
            "emailVerified": false,
            "createdTimestamp": 1727708450264,
            "enabled": true,
            "totp": false,
            "credentials":
            [
                {
                    "id": "5bff4d4e-1afc-442f-9831-c2a401a8413b",
                    "type": "password",
                    "userLabel": "My password",
                    "createdDate": 1727708459838,
                    "secretData": "{\"value\":\"R9KGgGHVTPGDFYkfhhE8iewD57dSG+HY+4gjx4Rq5IA=\",\"salt\":\"YN19tIxKOWqxL4WZD4+Uwg==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
                }
            ],
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/auditors",
                "/employees"
            ]
        },
        {
            "id": "eddf6ae6-ee90-4002-8d6a-03c24587770c",
            "username": "service-account-confluentmetadataservice",
            "emailVerified": false,
            "createdTimestamp": 1727481767921,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "confluentmetadataservice",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components"
            ]
        },
        {
            "id": "ff664446-7dc1-40fb-9fb7-50168e475d72",
            "username": "service-account-connectclient",
            "emailVerified": false,
            "createdTimestamp": 1727481846733,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "connectclient",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components/connect_apps",
                "/cp_components"
            ]
        },
        {
            "id": "7209cf36-1306-470c-acd4-9ba03acbc199",
            "username": "service-account-connectorsinkclient",
            "emailVerified": false,
            "createdTimestamp": 1727481907722,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "connectorsinkclient",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components"
            ]
        },
        {
            "id": "7b11a599-dba6-4ecc-a705-7d50254c8307",
            "username": "service-account-connectorsourceclient",
            "emailVerified": false,
            "createdTimestamp": 1727481924221,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "connectorsourceclient",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components"
            ]
        },
        {
            "id": "795f08c8-a1a9-4d14-9928-6b4e13148061",
            "username": "service-account-controlcenterclient",
            "emailVerified": false,
            "createdTimestamp": 1727482068400,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "controlcenterclient",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components/controlcenter_apps",
                "/cp_components"
            ]
        },
        {
            "id": "a745c0c9-55f6-4046-8e01-88c2ef3bc58a",
            "username": "service-account-kafka",
            "emailVerified": false,
            "createdTimestamp": 1727481639845,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "kafka",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components/broker_apps",
                "/cp_components"
            ]
        },
        {
            "id": "ee3f3e3e-65d6-4151-974f-4456cb065aed",
            "username": "service-account-kafkacliclient",
            "emailVerified": false,
            "createdTimestamp": 1727482215269,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "kafkacliclient",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/developers"
            ]
        },
        {
            "id": "e390a9ad-97e9-4fb1-a4d1-c8eb89cfefcd",
            "username": "service-account-kafkametricsreporter",
            "emailVerified": false,
            "createdTimestamp": 1727481981584,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "kafkametricsreporter",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components"
            ]
        },
        {
            "id": "8839e972-4347-4bc2-b9d5-a9957c3e2d20",
            "username": "service-account-kafkarestclient",
            "emailVerified": false,
            "createdTimestamp": 1727481671634,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "kafkarestclient",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components"
            ]
        },
        {
            "id": "ddc2d02e-c489-4329-98f2-e6e29c9d2e89",
            "username": "service-account-kafkarestproxy",
            "emailVerified": false,
            "createdTimestamp": 1727481689198,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "kafkarestproxy",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components",
                "/cp_components/restproxy_apps"
            ]
        },
        {
            "id": "6d59f687-4532-4f36-9b03-2afea028ff19",
            "username": "service-account-kraftcontroller",
            "emailVerified": false,
            "createdTimestamp": 1727481577608,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "kraftcontroller",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components/controller_apps",
                "/cp_components"
            ]
        },
        {
            "id": "5065707f-cdac-4168-92a8-6dbef0ddd6a6",
            "username": "service-account-ksqlclient",
            "emailVerified": false,
            "createdTimestamp": 1727482041302,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "ksqlclient",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components",
                "/cp_components/ksql_apps"
            ]
        },
        {
            "id": "621df363-a90a-4122-8182-37b6788103cc",
            "username": "service-account-replicatorclient",
            "emailVerified": false,
            "createdTimestamp": 1727481946189,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "replicatorclient",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components"
            ]
        },
        {
            "id": "d514b327-73f1-44bd-98a5-f9441f35adcc",
            "username": "service-account-schemaregistryclient",
            "emailVerified": false,
            "createdTimestamp": 1727482012189,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "schemaregistryclient",
            "disableableCredentialTypes":
            [],
            "requiredActions":
            [],
            "realmRoles":
            [
                "default-roles-confluentdemo"
            ],
            "notBefore": 0,
            "groups":
            [
                "/cp_components",
                "/cp_components/schemaregistry_apps"
            ]
        }
    ],
    "scopeMappings":
    [
        {
            "clientScope": "offline_access",
            "roles":
            [
                "offline_access"
            ]
        }
    ],
    "clientScopeMappings":
    {
        "account":
        [
            {
                "client": "account-console",
                "roles":
                [
                    "manage-account",
                    "view-groups"
                ]
            }
        ]
    },
    "clients":
    [
        {
            "id": "cb92f96e-ee09-4411-aace-b59556687561",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/confluentdemo/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris":
            [
                "/realms/confluentdemo/account/*"
            ],
            "webOrigins":
            [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "df6eb91c-9e0e-47c7-bc8d-c7dae3dd8769",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/confluentdemo/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris":
            [
                "/realms/confluentdemo/account/*"
            ],
            "webOrigins":
            [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers":
            [
                {
                    "id": "f8b88ace-4d95-43b1-a63d-1df108773ee5",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config":
                    {}
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "c1a0c0a8-fdc2-461b-8695-44487a301850",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris":
            [],
            "webOrigins":
            [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "10f4660c-8450-48fe-9f7e-90f8a65295bc",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris":
            [],
            "webOrigins":
            [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "90456fea-0d16-423e-9bb9-157cfed0eb53",
            "clientId": "confluentmetadataservice",
            "name": "Confluent Metadata Service",
            "description": "MDS Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "confluentmetadataservice-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727481767",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "8b993b39-8a69-492d-bd29-a52deb5accba",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "6ea0dff0-e1f5-4da5-b8f5-e5691a2e1335",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "c62cd2fa-1aa2-460a-9a99-c3516833efae",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "afef4410-e9e7-45c5-80ae-a00c65570943",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "e61769ee-2745-44e9-8372-d8667c53ff94",
            "clientId": "connectclient",
            "name": "Connect Client",
            "description": "Kafka Connect Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "connectclient-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727481846",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "ce969bdf-7c08-486d-800a-f2a0ff2515ac",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "28d2c44e-592a-4c38-b0ce-cd525a70dc9d",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "74e77c01-4aba-46bd-8bdf-06100ce2f11c",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "86197721-a35f-46aa-b09f-67a605650e46",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "0d384605-8b68-473d-83be-69d5beb9b377",
            "clientId": "connectorsinkclient",
            "name": "Connector Sink Client",
            "description": "Kafka Sink Connector Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "connectorsinkclient-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727481907",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "2d6877ee-bf33-432a-a789-0c077742e78f",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e4f3d58c-c4c5-4cb2-931a-129ec8eafbf7",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                },
                {
                    "id": "85777a68-01e4-44af-aeb2-c7f9c7eeb9e4",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "c16c76be-90b8-4406-b3b6-33b25c7f5a8f",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "474529f7-aa4e-46ba-87b2-09706a20b10b",
            "clientId": "connectorsourceclient",
            "name": "Connector Source Client",
            "description": "Kafka Source Connector Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "connectorsourceclient-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727481924",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "c8390705-8377-4f49-aa79-67cd4c3cd5ab",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "1e8ed30b-2ca2-41bb-8243-dcd41ea7c54d",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "bef8af76-2c77-4460-ac79-438fb14e3d34",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "7f47dcca-41a8-49f7-b42a-0239a7a9c65e",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "b748d916-6f0a-41b0-8b86-dc42e439f4c4",
            "clientId": "controlcenterclient",
            "name": "Control Center Client",
            "description": "Control Center Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "controlcenterclient-secret",
            "redirectUris":
            [
                "http://localhost:9021/api/metadata/security/1.0/oidc/authorization-code/callback",
                "https://localhost:9022/api/metadata/security/1.0/oidc/authorization-code/callback"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727482068",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "true",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "54bf85d6-1334-4bbc-bd32-d974f7c98ba0",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e61ae36e-83ad-474a-9290-8e58f24b94f0",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "3491d3fc-b6df-4ecf-88cb-2e8d19f53414",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                },
                {
                    "id": "260a9528-3a47-4763-9ae8-6e1f46a1c2f3",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "c91b1cec-a34b-40cd-b29d-02fd5dff784d",
            "clientId": "kafka",
            "name": "Kafka Broker",
            "description": "Kafka Broker Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "kafka-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727481639",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "a7c309b5-f421-4ba8-b654-3e2d13908380",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "f13b4868-7c37-4506-b206-10655bac7b1f",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "258674ab-3724-461d-a542-c0e7c5a9e2c0",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                },
                {
                    "id": "ecccc9d0-3c7a-47fd-92c6-14528e486162",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "4e2e516a-308d-45b5-b66d-a64b3fd27004",
            "clientId": "kafkacliclient",
            "name": "Kafka Cli Client",
            "description": "Kafka Cli Client Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "kafkacliclient-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727482215",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "f0f93dd2-b5e4-48bc-b4f9-185fce7a8f30",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                },
                {
                    "id": "73d60f2b-a6cb-4fb8-8268-de88ad4c2a75",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "40c7b084-52ed-4fea-a2a6-cb8998e28230",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "35252012-fc36-4b47-8fa6-8a0be3db494e",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "e49d8595-3c46-487b-b2f9-7ad9e5ced22b",
            "clientId": "kafkametricsreporter",
            "name": "Kafka Metrics Reporter",
            "description": "Kafka Metrics Reporter Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "kafkametricsreporter-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727481981",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "3dae75fb-3a83-47d1-a6c3-18409a03c267",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e4320461-9252-444d-8083-36e9a9940626",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                },
                {
                    "id": "4b230d49-5d4c-4422-b611-6babde69b354",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "73ba6791-881a-45bd-a48b-c01ae95a3608",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "09999f57-f284-459f-9b92-fbc5c13c6dd2",
            "clientId": "kafkarestclient",
            "name": "Kafka Rest Client",
            "description": "Kafka Rest Client Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "kafkarestclient-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727481671",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "927473b5-cb1e-4d2a-a080-06dc4089b527",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                },
                {
                    "id": "bc6205f5-d350-45aa-8552-0e573ccb90c9",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "829fa35a-29af-430d-8310-b66e69f1ef5f",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e15ae6a1-1c84-49dc-a34c-f113cf87ea8c",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "a3435dd5-2105-46a0-9512-82fb41c3f379",
            "clientId": "kafkarestproxy",
            "name": "Kafka Rest Proxy",
            "description": "Kafka REST Proxy Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "kafkarestproxy-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727481689",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "e3f4fd7d-efdd-4537-9c3b-0b5228e2c2eb",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "5d27e956-ef29-4c06-b97a-7793805582da",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "1cba802f-7e3d-44fc-bc92-da7e9e047588",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "4914712b-4e2d-4bd8-89d9-a89d73bb34fb",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "5cc9b39f-0cea-4a4c-b707-bfa998dccc3e",
            "clientId": "kraftcontroller",
            "name": "Kraft Controller",
            "description": "Kraft Controller Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "kraftcontroller-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727481577",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "a9f22a4d-4aca-4223-af9c-6b02a4be90c0",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "19c7c8f2-d339-41a8-888a-6c366d8a4745",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "a4f753ae-2d5f-4ff8-a8ed-eec79cd2bef7",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "68bc046b-41c7-4248-8256-b6f244d4c18e",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "491b864e-2db6-4f9a-8c49-959c40969e69",
            "clientId": "ksqlclient",
            "name": "Ksql Client",
            "description": "KSQLDB Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "ksqlclient-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727482041",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "52ced8c7-787f-4bed-b3ab-473d9a2eef95",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "bc7adafb-ca74-46d1-9e9b-2dd038b130d8",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "b9ef41cd-11c8-4868-b79a-2b62683334f0",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                },
                {
                    "id": "b67da54a-17e8-4567-9b58-3f85a12cb182",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "1debfe40-23b0-44b7-a10b-f23d00390dc9",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris":
            [],
            "webOrigins":
            [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "d63574c5-a304-4b23-bd28-33f4014fc49f",
            "clientId": "replicatorclient",
            "name": "Replicator Client",
            "description": "Confluent Replicator Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "replicatorclient-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727481946",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "22ee063e-4313-4be1-b9d5-5201f9ec0dfd",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "313a3a6e-7e97-41c1-99be-013a8f082070",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "46beeb6c-7fdf-4701-b6fc-43539556ce37",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                },
                {
                    "id": "a77a9875-dd53-4dcf-8374-46e039f53d9e",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "be7c57fa-1de7-4cb2-85d2-1eae41b5917b",
            "clientId": "schemaregistryclient",
            "name": "Schema Registry Client",
            "description": "Schema Registry Application Service Client",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "schemaregistryclient-secret",
            "redirectUris":
            [
                "/*"
            ],
            "webOrigins":
            [
                "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1727482012",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers":
            [
                {
                    "id": "6eb7f8e0-9254-4019-8d78-e519ac358c05",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "5f7038e6-f425-40e9-97b9-4ab97311697c",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "a7ef49a7-7a96-4153-a8c3-952303f765a9",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "sub",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "3788a4f8-4145-4520-97cf-d87129b3244f",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "full.path": "false",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "lightweight.claim": "false",
                        "access.token.claim": "true",
                        "claim.name": "groups"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "829065d3-eb39-4646-aa85-6bafbf25bd79",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/confluentdemo/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris":
            [
                "/admin/confluentdemo/console/*"
            ],
            "webOrigins":
            [
                "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes":
            {
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides":
            {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers":
            [
                {
                    "id": "618bcf25-d24b-47cd-9a10-435c1cfff2ca",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes":
            [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
            ],
            "optionalClientScopes":
            [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        }
    ],
    "clientScopes":
    [
        {
            "id": "3f0c0363-47a0-4471-bd05-cd23d12991ee",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes":
            {
                "include.in.token.scope": "true",
                "consent.screen.text": "${addressScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers":
            [
                {
                    "id": "a6394e8c-4ef8-41bb-b7c1-cadb9e767c7f",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "introspection.token.claim": "true",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                    }
                }
            ]
        },
        {
            "id": "2b2c2c48-6df9-4801-b2bd-8efb50778c57",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes":
            {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            },
            "protocolMappers":
            [
                {
                    "id": "c2802ca7-e6b7-4780-a7b3-1d94de4e890e",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e9973c08-d034-434f-87a1-ddd1e4ae001c",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "multivalued": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "2abda4fc-ff77-404f-bb30-1095b358e9a6",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes":
            {
                "include.in.token.scope": "false",
                "consent.screen.text": "${rolesScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers":
            [
                {
                    "id": "c5081eac-068e-4d41-80de-ce229bc34e45",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                },
                {
                    "id": "38b11d0d-0ad4-491e-aaef-f192e2a28542",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.attribute": "foo",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                },
                {
                    "id": "67b64c12-06e0-4bf9-80f6-950bd341f03b",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.attribute": "foo",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "897227f6-82ac-4d2a-a75f-0b1c93435a73",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes":
            {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers":
            [
                {
                    "id": "4ad14976-a181-4cea-ada3-8d1745b94c3c",
                    "name": "acr loa level",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-acr-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "02481858-d83d-4c01-9ebc-2a70bea33bea",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes":
            {
                "include.in.token.scope": "true",
                "consent.screen.text": "${emailScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers":
            [
                {
                    "id": "2365ec3a-ac41-44cc-add6-d87805976378",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "bd3f71e5-b39a-4853-a06d-932cf29f0e5c",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "28d6aac8-c705-4ce3-aa11-017e9fe034b9",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes":
            {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers":
            [
                {
                    "id": "a162b6a0-58b1-4d8b-93f4-b39a4c366d4e",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                    }
                }
            ]
        },
        {
            "id": "72c1cd95-5df1-4ea4-a25b-2c6d8205d871",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes":
            {
                "include.in.token.scope": "true",
                "consent.screen.text": "${phoneScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers":
            [
                {
                    "id": "b75b28d7-7595-4114-8a1a-53032a11fbd3",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "87b9b9e8-8cb0-4d9a-bfb3-00f601d7b4c9",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "65f0d194-b35d-4fcf-9543-64ad92203ef4",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes":
            {
                "include.in.token.scope": "true",
                "consent.screen.text": "${profileScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers":
            [
                {
                    "id": "5e066701-0813-4641-b9ae-d9effd2ec8bb",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "72c2f251-c1a5-4733-a42e-365e172f413a",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "78e3d682-123d-4839-9468-8cd678ffd2f7",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "7e7baa54-cdf2-49a7-ad7f-7d5705fcbcbe",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "3a86ea17-8f9d-41b4-8502-486be1ff702d",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "long"
                    }
                },
                {
                    "id": "1e40bf57-f633-4464-a524-14bfd170e608",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "c1801614-38c4-454e-87a6-674862fb15ea",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "f9eddea4-2c19-4375-8b31-203c9c87fb2c",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "8123e9bc-a763-4776-a7cf-cf947826679d",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "cb156225-be98-4244-8295-216d5608678d",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "2b7fe71c-5ae3-48f7-98dd-6a06270cb2f9",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "85e02b95-6ae0-431c-a363-bda801dd0bfe",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "ff634046-6c6c-4ff1-ac15-e725b5259155",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "924d15e5-ecc7-4958-89b4-aa3f24c48ec6",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "95a2eed4-156b-4f2e-a369-c689b99272f8",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes":
            {
                "include.in.token.scope": "false",
                "consent.screen.text": "",
                "display.on.consent.screen": "false"
            },
            "protocolMappers":
            [
                {
                    "id": "af9c664d-35fc-48ff-834a-92f79e7b46d9",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "af2acc41-92ee-4c4b-ba31-3f3598d4c3e9",
            "name": "basic",
            "description": "OpenID Connect scope for add all basic claims to the token",
            "protocol": "openid-connect",
            "attributes":
            {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers":
            [
                {
                    "id": "e60bee4d-c32a-44a6-92ee-626672b291f2",
                    "name": "sub",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-sub-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                },
                {
                    "id": "b4b6b2ce-8cee-4843-9245-c24fe2c5ed7d",
                    "name": "auth_time",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config":
                    {
                        "user.session.note": "AUTH_TIME",
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "auth_time",
                        "jsonType.label": "long"
                    }
                }
            ]
        },
        {
            "id": "50b3fa2a-50b5-4ebc-8fb4-54ca618a24ee",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes":
            {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            }
        }
    ],
    "defaultDefaultClientScopes":
    [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr",
        "basic"
    ],
    "defaultOptionalClientScopes":
    [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
    ],
    "browserSecurityHeaders":
    {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer":
    {},
    "eventsEnabled": false,
    "eventsListeners":
    [
        "jboss-logging"
    ],
    "enabledEventTypes":
    [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders":
    [],
    "identityProviderMappers":
    [],
    "components":
    {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy":
        [
            {
                "id": "88075289-c227-4a27-a2be-1b9c3bf8a349",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents":
                {},
                "config":
                {
                    "allow-default-scopes":
                    [
                        "true"
                    ]
                }
            },
            {
                "id": "ca00abb8-f4a7-4787-a883-ef702401478f",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents":
                {},
                "config":
                {
                    "allowed-protocol-mapper-types":
                    [
                        "saml-user-attribute-mapper",
                        "saml-role-list-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "saml-user-property-mapper",
                        "oidc-usermodel-property-mapper",
                        "oidc-full-name-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "oidc-address-mapper"
                    ]
                }
            },
            {
                "id": "9cdc05f8-6385-4035-8da9-c8c7cfd59312",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents":
                {},
                "config":
                {
                    "max-clients":
                    [
                        "200"
                    ]
                }
            },
            {
                "id": "f7db2462-b18f-43a7-87c5-59001a4cede0",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents":
                {},
                "config":
                {
                    "host-sending-registration-request-must-match":
                    [
                        "true"
                    ],
                    "client-uris-must-match":
                    [
                        "true"
                    ]
                }
            },
            {
                "id": "1006a6d6-7728-4a58-95c4-b19935f9f24f",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents":
                {},
                "config":
                {
                    "allowed-protocol-mapper-types":
                    [
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-role-list-mapper",
                        "oidc-address-mapper",
                        "saml-user-property-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-full-name-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-usermodel-property-mapper"
                    ]
                }
            },
            {
                "id": "73b26833-9b5d-46f7-8218-fcbf9fe009d9",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents":
                {},
                "config":
                {
                    "allow-default-scopes":
                    [
                        "true"
                    ]
                }
            },
            {
                "id": "b7068be0-a48e-4215-a73c-7b99fb450710",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents":
                {},
                "config":
                {}
            },
            {
                "id": "7794ee74-3fa9-4ca1-a224-81e5450ac270",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents":
                {},
                "config":
                {}
            }
        ],
        "org.keycloak.keys.KeyProvider":
        [
            {
                "id": "88a5369f-ace7-4fd8-994a-b0030dbcb36b",
                "name": "rsa-enc-generated",
                "providerId": "rsa-enc-generated",
                "subComponents":
                {},
                "config":
                {
                    "priority":
                    [
                        "100"
                    ],
                    "algorithm":
                    [
                        "RSA-OAEP"
                    ]
                }
            },
            {
                "id": "1c70b3f1-d1b7-4948-b6c8-d0908fd15c70",
                "name": "hmac-generated-hs512",
                "providerId": "hmac-generated",
                "subComponents":
                {},
                "config":
                {
                    "priority":
                    [
                        "100"
                    ],
                    "algorithm":
                    [
                        "HS512"
                    ]
                }
            },
            {
                "id": "6da2d5ae-7577-4b5e-a04b-9b16af6d5ffb",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents":
                {},
                "config":
                {
                    "priority":
                    [
                        "100"
                    ]
                }
            },
            {
                "id": "edf77c75-0621-4f3e-a18f-eb710383e9f2",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents":
                {},
                "config":
                {
                    "priority":
                    [
                        "100"
                    ]
                }
            }
        ]
    },
    "internationalizationEnabled": false,
    "supportedLocales":
    [],
    "authenticationFlows":
    [
        {
            "id": "fe656d4c-f13e-4888-8245-f1cbf2861a04",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "5021c375-96c6-4623-9631-2ce8fc5ffcf1",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "4e56f00f-c565-477d-ae70-94c7f926b458",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "57740430-d6d6-4ce5-bfd0-fe9186c4e7e9",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "05878610-34f0-4278-b53b-f5b57894a3c2",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Account verification options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "aab9e7b9-d067-492e-bc99-6b9c0ac5457a",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "71f06ff8-c8d0-45bc-910c-d24a9e4cb6de",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "e4e26e5b-8a5c-411b-9643-b704ee4c9d8d",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "First broker login - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "16a6c932-7b60-488c-968d-999513449dba",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "forms",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "ca50d486-c42b-446c-a290-16a1605acd2f",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "ee7cf7c3-5cf9-470c-8dfe-e8a3dc183a8c",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "938c7826-f127-421f-9bf9-2ef7b4cec0b8",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "9f4f41ea-c4ac-4830-be56-194ff56065ff",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "User creation or linking",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "853ea54a-97c5-4b0d-8529-1164a2ed2db8",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "02dc52eb-6150-47ac-bebb-ea45a2a07c6b",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "ffa03aa9-a3cd-4978-8a10-8406fd3c58f1",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-terms-and-conditions",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 70,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "eb3cc3a5-75b6-4429-9d4b-e8dd96c45246",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 40,
                    "autheticatorFlow": true,
                    "flowAlias": "Reset - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "6b5e575c-7034-4530-ae10-10dd41535b5a",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions":
            [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        }
    ],
    "authenticatorConfig":
    [
        {
            "id": "a90a074c-9d41-4bd9-adaf-c4359fb87ce1",
            "alias": "create unique user config",
            "config":
            {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "1048a60b-2941-42d8-ba12-1ee90e10ac46",
            "alias": "review profile config",
            "config":
            {
                "update.profile.on.first.login": "missing"
            }
        }
    ],
    "requiredActions":
    [
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config":
            {}
        },
        {
            "alias": "TERMS_AND_CONDITIONS",
            "name": "Terms and Conditions",
            "providerId": "TERMS_AND_CONDITIONS",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config":
            {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config":
            {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config":
            {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config":
            {}
        },
        {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config":
            {}
        },
        {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": true,
            "defaultAction": false,
            "priority": 70,
            "config":
            {}
        },
        {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": true,
            "defaultAction": false,
            "priority": 80,
            "config":
            {}
        },
        {
            "alias": "VERIFY_PROFILE",
            "name": "Verify Profile",
            "providerId": "VERIFY_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 90,
            "config":
            {}
        },
        {
            "alias": "delete_credential",
            "name": "Delete Credential",
            "providerId": "delete_credential",
            "enabled": true,
            "defaultAction": false,
            "priority": 100,
            "config":
            {}
        },
        {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config":
            {}
        }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes":
    {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "600",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "frontendUrl": "",
        "organizationsEnabled": "false",
        "acr.loa.map": "{}"
    },
    "keycloakVersion": "25.0.5",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "clientProfiles":
    {
        "profiles":
        []
    },
    "clientPolicies":
    {
        "policies":
        []
    }
}
